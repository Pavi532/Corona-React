{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Charts/Charts.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","console","log","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","FormControl2","i","key","App","state","fetchedData","setState","run","window","location","reload","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0112bfbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1sl9j\",\"card\":\"Cards_card__2Vkwf\",\"recovered\":\"Cards_recovered__1U0vV\",\"infected\":\"Cards_infected__1yWRo\",\"deaths\":\"Cards_deaths__3FaQv\"};","import React from 'react';\r\nimport styles from './Cards.module.css'\r\nimport {Card, CardContent, Typography, Grid, StylesProvider, styled} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading....'\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.infected) }>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start ={0} end ={confirmed.value} duration ={2.5} separator = \",\"/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Active Cases of CORONA</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.recovered) }>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recoveries</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start ={0} end ={recovered.value} duration ={2.5} separator = \",\"/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Recoveries from CORONA</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.deaths) }>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start ={0} end ={deaths.value} duration ={2.5} separator = \",\"/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>CORONA Deaths</Typography>\r\n                    </CardContent>\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) =>{\r\n    let changeableurl = url;\r\n\r\n    if(country){\r\n        changeableurl = url+'/countries/'+country\r\n    }\r\n\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableurl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\n    try{\r\n        const {data} = await axios.get(url+'/daily');\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(url+'/countries');\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect}from 'react';\r\nimport {Select, MenuItem, NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)} className={styles.FormControl2}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n            {/* <Select displayEmpty defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)} className={styles.FormControl2}>\r\n                <MenuItem value=\"global\">Global</MenuItem>\r\n                {fetchedCountries.map((country,i) => <MenuItem key={i} value={country}>{country}</MenuItem>)}\r\n            </Select> */}\r\n        </FormControl>\r\n        \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n// import Cards from './components/Cards/Cards';\r\n// import Charts from './components/Charts/Charts';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards,Charts,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    // handleCountryChange = async (country) =>{\r\n    //   const fetchedData = await fetchData(country);\r\n    //   this.setState({data:fetchedData, country: country});\r\n    // }\r\n\r\n    handleCountryChange = (country) =>{\r\n      // country === \"global\" ? (window.location.reload(false)):console.log(country)\r\n      \r\n      if (country !== \"global\"){\r\n        const run = async (country) =>{\r\n          console.log(country)\r\n          const fetchedData = await fetchData(country);\r\n          this.setState({data:fetchedData, country: country});\r\n        }\r\n        run(country);\r\n      }else{\r\n        console.log(country)\r\n        window.location.reload(false)\r\n      }\r\n      \r\n    }\r\n\r\n    render(){\r\n\r\n        const { data, country } = this.state;\r\n\r\n        return(\r\n          <div className={styles.container}>\r\n            <h1> COVID-19 Stats</h1>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Cards data={data} />\r\n            {/* <Charts data={data} country={country}/> */}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3s4a2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__hyHe9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3l_65\"};"],"sourceRoot":""}